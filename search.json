[{"path":"https://ladylavender.github.io/LandComp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 LandComp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ladylavender.github.io/LandComp/articles/LandComp.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"LandComp","text":"Suggest data vegetation types along landscape. Note, three requirements: landscape data numeric binary, .e. contain 0 1 values geometry landscape data regular square hexagonal grid geometry landscape data projected coordinates (.e. WGS84 eligible)","code":""},{"path":"https://ladylavender.github.io/LandComp/articles/LandComp.html","id":"using-regular-square-grid","dir":"Articles","previous_headings":"Examples","what":"Using regular square grid","title":"LandComp","text":"look square grid data.  Fig. 1. Visualization square grid data. CD landscape scale base square grid (.e. using input grid cells spatial units) can calculated However, Juhász-Nagy’s functions, .e. compositional diversity (CD) associatum () calculated multiple scales. purpose spatial units can selected using buffer grid cells around central grid cell, 0 means original cell without enlargement.  Fig. 2. Main properties spatial units used calculation Juhász-Nagy’s functions. integer aggregation steps, radially enlarged spatial units consisting 9, 25, 49 etc. squares produced. Enlarged spatial units fraction aggregation steps created using spatial unit next integer aggregation step, excluding grid cells touch corners next integer unit. area square grid cell input data. analysis can done precise giving also fraction numbers input. Thus, following values CD can calculated e.g.","code":"suppressPackageStartupMessages(library(\"sf\")) library(LandComp) data(\"square_data\") str(square_data) #> Classes 'sf' and 'data.frame':   300 obs. of  6 variables: #>  $ VT1     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT2     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT3     : num  0 0 0 0 1 1 0 0 0 0 ... #>  $ VT4     : num  0 0 0 0 0 0 0 1 1 1 ... #>  $ VT5     : num  0 0 0 0 0 0 0 0 0 1 ... #>  $ geometry:sfc_POLYGON of length 300; first list element: List of 1 #>   ..$ : num [1:5, 1:2] 400000 400000 405000 405000 400000 ... #>   ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\" #>  - attr(*, \"sf_column\")= chr \"geometry\" #>  - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA #>   ..- attr(*, \"names\")= chr [1:5] \"VT1\" \"VT2\" \"VT3\" \"VT4\" ... LandComp(x = square_data, aggregation_steps = 0) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1               0                1          2.5e+07               300 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      13 2.755349 0.1709469 LandComp(x = square_data, aggregation_steps = c(0.5, 1)) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1             0.5                5         1.25e+08               234 #> 2             1.0                9         2.25e+08               234 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      18 3.572889 0.7480368 #> 2                      18 3.176364 1.0874836"},{"path":"https://ladylavender.github.io/LandComp/articles/LandComp.html","id":"using-regular-hexagonal-grid","dir":"Articles","previous_headings":"Examples","what":"Using regular hexagonal grid","title":"LandComp","text":"example dataset contains pointy-topped hexagons. Note, methods also fine regular hexagonal grids containing flat-topped hexagons. look hexagonal grid data.  Fig. 3. Visualization hexagonal grid data. CD landscape scale base hexagonal grid (.e. using input grid cells spatial units) can calculated However, Juhász-Nagy’s functions, .e. compositional diversity (CD) associatum () calculated multiple scales. purpose spatial units can selected using buffer grid cells around central grid cell, 0 means original cell without enlargement.  Fig. 4. Main properties spatial units used calculation Juhász-Nagy’s functions. integer aggregation steps, radially enlarged spatial units consisting 7, 19, 37 etc. hexagons produced. Enlarged spatial units fraction aggregation steps created using spatial unit next integer aggregation step, excluding grid cells touch vertices next integer unit. Ah area hexagonal grid cell input data. Analysis can done precise giving also fraction numbers input. Thus, following values CD can calculated e.g. Note, case hexagonal grid, steps falling interval ]0,1[ evaluated.","code":"data(\"hexagonal_data\") str(hexagonal_data) #> Classes 'sf' and 'data.frame':   300 obs. of  6 variables: #>  $ VT1     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT2     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT3     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT4     : num  1 1 0 1 1 1 0 1 1 1 ... #>  $ VT5     : num  0 0 1 1 0 0 1 0 0 1 ... #>  $ geometry:sfc_POLYGON of length 300; first list element: List of 1 #>   ..$ : num [1:7, 1:2] 649500 649000 649000 649500 650000 ... #>   ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\" #>  - attr(*, \"sf_column\")= chr \"geometry\" #>  - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA #>   ..- attr(*, \"names\")= chr [1:5] \"VT1\" \"VT2\" \"VT3\" \"VT4\" ... LandComp(x = hexagonal_data, aggregation_steps = 0) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1               0                1         866025.4               300 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      12 1.972863 0.1256525 LandComp(x = hexagonal_data, aggregation_steps = c(1, 1.5)) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1             1.0                7          6062178               234 #> 2             1.5               13         11258330               187 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      16 3.422409 0.5394512 #> 2                      21 3.487383 0.5487755"},{"path":"https://ladylavender.github.io/LandComp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Krisztina Dóra Konrád. Author, maintainer, copyright holder. Ákos Bede-Fazekas. Author, copyright holder. Sándor Bartha. Copyright holder. Imelda Somodi. Conceptor, copyright holder.","code":""},{"path":[]},{"path":"https://ladylavender.github.io/LandComp/index.html","id":"landcomp","dir":"","previous_headings":"","what":"a package for analysing landscape composition and structure at\n    multiple scales","title":"a package for analysing landscape composition and structure at\n    multiple scales","text":"LandComp package quantifying landscape diversity structure multiple scales. purposes Juhász-Nagy’s functions, .e. compositional diversity (CD) associatum (), calculated","code":""},{"path":"https://ladylavender.github.io/LandComp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"a package for analysing landscape composition and structure at\n    multiple scales","text":"can install development version LandComp using following command:","code":"install.packages(\"devtools\") devtools::install_github(\"ladylavender/LandComp\")"},{"path":"https://ladylavender.github.io/LandComp/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"a package for analysing landscape composition and structure at\n    multiple scales","text":"Example regular grids represent demonstrative spatial arrangements. reflect typical case presence/absence data landscape classes (e.g. vegetation types ) along landscape. Note, three requirements using LandComp package: landscape data numeric binary, .e. contain 0 1 values geometry landscape data regular square hexagonal grid geometry landscape data projected coordinates (.e. WGS84 eligible)","code":""},{"path":"https://ladylavender.github.io/LandComp/index.html","id":"regular-square-grid-data","dir":"","previous_headings":"Example","what":"Regular square grid data","title":"a package for analysing landscape composition and structure at\n    multiple scales","text":"structure visualization example square grid data:  Two values CD measuring landscape diversity structure can calculated e.g.","code":"suppressPackageStartupMessages(library(\"sf\")) library(LandComp) data(\"square_data\") plot(square_data) str(square_data) #> Classes 'sf' and 'data.frame':   300 obs. of  6 variables: #>  $ VT1     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT2     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT3     : num  0 0 0 0 1 1 0 0 0 0 ... #>  $ VT4     : num  0 0 0 0 0 0 0 1 1 1 ... #>  $ VT5     : num  0 0 0 0 0 0 0 0 0 1 ... #>  $ geometry:sfc_POLYGON of length 300; first list element: List of 1 #>   ..$ : num [1:5, 1:2] 400000 400000 405000 405000 400000 ... #>   ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\" #>  - attr(*, \"sf_column\")= chr \"geometry\" #>  - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA #>   ..- attr(*, \"names\")= chr [1:5] \"VT1\" \"VT2\" \"VT3\" \"VT4\" ... LandComp(x = square_data, aggregation_steps = 0:1) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1               0                1         2.50e+07               300 #> 2               1                9         2.25e+08               234 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      13 2.755349 0.1709469 #> 2                      18 3.176364 1.0874836"},{"path":"https://ladylavender.github.io/LandComp/index.html","id":"regular-hexagonal-grid-data","dir":"","previous_headings":"Example","what":"Regular hexagonal grid data","title":"a package for analysing landscape composition and structure at\n    multiple scales","text":"structure visualization example hexagonal grid data:  information examples, see ?LandComp vignette(\"LandComp\") installing package. Note, like view vignette R using command vignette(\"LandComp\"), install package using following command:","code":"data(\"hexagonal_data\") plot(hexagonal_data) str(hexagonal_data) #> Classes 'sf' and 'data.frame':   300 obs. of  6 variables: #>  $ VT1     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT2     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT3     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ VT4     : num  1 1 0 1 1 1 0 1 1 1 ... #>  $ VT5     : num  0 0 1 1 0 0 1 0 0 1 ... #>  $ geometry:sfc_POLYGON of length 300; first list element: List of 1 #>   ..$ : num [1:7, 1:2] 649500 649000 649000 649500 650000 ... #>   ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\" #>  - attr(*, \"sf_column\")= chr \"geometry\" #>  - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA #>   ..- attr(*, \"names\")= chr [1:5] \"VT1\" \"VT2\" \"VT3\" \"VT4\" ... LandComp(x = hexagonal_data, aggregation_steps = 0:1) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1               0                1         866025.4               300 #> 2               1                7        6062177.8               234 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      12 1.972863 0.1256525 #> 2                      16 3.422409 0.5394512 devtools::install_github(\"ladylavender/LandComp\", build_vignettes = TRUE)"},{"path":"https://ladylavender.github.io/LandComp/reference/LandComp.html","id":null,"dir":"Reference","previous_headings":"","what":"LandComp: quantify landscape diversity and structure — LandComp","title":"LandComp: quantify landscape diversity and structure — LandComp","text":"Calculate compositional diversity associatum landscape data different spatial scales.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/LandComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LandComp: quantify landscape diversity and structure — LandComp","text":"","code":"LandComp(   x,   aggregation_steps = c(0, 1, 1.5, 2:5),   parallelrun = TRUE,   savememory = FALSE,   precision = 4 )"},{"path":"https://ladylavender.github.io/LandComp/reference/LandComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LandComp: quantify landscape diversity and structure — LandComp","text":"x sf object type POLYGON must projected coordinates (.e. WGS-84 accepted). Geometry must regular spatial grid containing either squares hexagons. flat topped pointy topped hexagons accepted. Fields contain binary integer values (.e., 0s 1s). Logical values coerced warning. aggregation_steps numeric vector containing non-negative numbers. vector elements express size spatial units calculation compositional diversity associatum required. size measured number rows grid cells around central grid cell, 0 means original grid cell without enlargement. Analysis can done precise giving also fraction numbers input. case, following step's spatial unit minus grid cells touching vertices used spatial base units. Note, case hexagonal grid, steps falling interval ]0,1[ evaluated. Negative, non-finite missing values ignored warning. parallelrun logical vector length one indicating whether aggregation performed parallel way (defaults TRUE). available processor cores used case parallel processing. set FALSE memory limitation occurs. savememory logical vector length one indicating whether slower less memory-demanding algorithm run (defaults FALSE). set TRUE available memory limited. precision numeric vector length one. Number digits areas grid cells rounded. decreased grid perfectly regular equality check grid cells' area fails.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/LandComp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LandComp: quantify landscape diversity and structure — LandComp","text":"data.frame length(aggregation_steps) rows following columns attribute: AggregationStep: size spatial units measured number rows grid cells around central grid cell. content (order) column parameter aggregation_steps except negative, non-finite missing values removed. also serves ID resulting data.frame. SpatialUnit_Size: number grid cells contained aggregated, large unit. SpatialUnit_Area: area aggregated, large unit SpatialUnit_Count: sample size. UniqueCombination_Count: number unique landscape class combinations. CD_bit: compositional diversity (sensu Juhász-Nagy) x. AS_bit: associatum (sensu Juhász-Nagy)  x attr(*, \"unit\"): unit CRS object provided x.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/LandComp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LandComp: quantify landscape diversity and structure — LandComp","text":"function based model family created Juhász-Nagy (1976, 1984, 1993). Compositional diversity (CD) measures diversity landscape class combinations. Associatum () characterizes spatial dependence landscape classes. measured difference \"random\" diversity (.e. predicted diversity assumption independent occurrence landscape classes) observed diversity. functions typically one maximum (CDmax, ASmax), plotting increasing scale. Unit sizes corresponding maxima values functions (ACD, ACD) help capture spatial scale holding information. indices, particularly CDmax, ASmax ACD can effectively used indicators (Juhász-Nagy & Podani 1983). Though functions originally applied community ecology, current function supports application landscape context.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/LandComp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LandComp: quantify landscape diversity and structure — LandComp","text":"Juhász-Nagy P (1976) Spatial dependence plant populations. Part 1. Equivalence analysis (outline new model). Acta Bot Acad Sci Hung 22:61–78. Juhász-Nagy P (1984) Spatial dependence plant population. 2. family new models. Acta Bot Hung 30:363–402. Juhász-Nagy P (1993) Notes compositional diversity. Hydrobiologia 249:173–182. Juhász-Nagy P, Podani J (1983) Information theory methods study spatial processes succession. Vegetatio 51:129–140.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/LandComp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LandComp: quantify landscape diversity and structure — LandComp","text":"","code":"data(square_data) LandComp(x = square_data, aggregation_steps = c(0, 0.5, 1)) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1             0.0                1         2.50e+07               300 #> 2             0.5                5         1.25e+08               234 #> 3             1.0                9         2.25e+08               234 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      13 2.755349 0.1709469 #> 2                      18 3.572889 0.7480368 #> 3                      18 3.176364 1.0874836  data(hexagonal_data) LandComp(x = hexagonal_data, aggregation_steps = c(0, 1, 1.5)) #>   AggregationStep SpatialUnit_Size SpatialUnit_Area SpatialUnit_Count #> 1             0.0                1         866025.4               300 #> 2             1.0                7        6062177.8               234 #> 3             1.5               13       11258330.2               187 #>   UniqueCombination_Count   CD_bit    AS_bit #> 1                      12 1.972863 0.1256525 #> 2                      16 3.422409 0.5394512 #> 3                      21 3.487383 0.5487755"},{"path":"https://ladylavender.github.io/LandComp/reference/calculate_SpatialUnitSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of grid cells covered by enlarged spatial units — calculate_SpatialUnitSize","title":"Number of grid cells covered by enlarged spatial units — calculate_SpatialUnitSize","text":"Calculate number grid cells covered radially enlarged spatial units.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/calculate_SpatialUnitSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of grid cells covered by enlarged spatial units — calculate_SpatialUnitSize","text":"","code":"calculate_SpatialUnitSize(aggregation_step, square = FALSE)"},{"path":"https://ladylavender.github.io/LandComp/reference/calculate_SpatialUnitSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of grid cells covered by enlarged spatial units — calculate_SpatialUnitSize","text":"aggregation_step numeric vector length one containing non-negative number. number expresses size spatial units calculation compositional diversity associatum required. size measured number rows grid cells around central grid cell, 0 means original cell without enlargement. Fraction number can also set input. case, following step's spatial unit minus grid cells touching vertices used spatial base units. Note, case hexagonal grid, steps falling interval ]0,1[ evaluated. Negative, non-finite missing values ignored warning. square logical vector length one. TRUE square grid, FALSE, hexagonal grid used basis calculation.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/calculate_SpatialUnitSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of grid cells covered by enlarged spatial units — calculate_SpatialUnitSize","text":"numeric vector length one.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/calculate_SpatialUnitSize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of grid cells covered by enlarged spatial units — calculate_SpatialUnitSize","text":"","code":"calculate_SpatialUnitSize(aggregation_step = 0, square = TRUE) #> [1] 1  foo = c() for(i in c(0, 0.5, 1, 1.5, 2, 3))   foo = c(foo, calculate_SpatialUnitSize(aggregation_step = i, square = TRUE)) foo #> [1]  1  5  9 21 25 49  vapply(c(0, 1, 1.5, 2, 3), FUN = function(i){   calculate_SpatialUnitSize(aggregation_step = i, square = FALSE)},   FUN.VALUE = numeric(length = 1)) #> [1]  1  7 13 19 37"},{"path":"https://ladylavender.github.io/LandComp/reference/hexagonal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample vegetation data with hexagonal grid — hexagonal_data","title":"Sample vegetation data with hexagonal grid — hexagonal_data","text":"generated dataset containing presences absences five vegetation types.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/hexagonal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample vegetation data with hexagonal grid — hexagonal_data","text":"","code":"data(hexagonal_data)"},{"path":"https://ladylavender.github.io/LandComp/reference/hexagonal_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample vegetation data with hexagonal grid — hexagonal_data","text":"\"sf\" object 300 rows 6 variables","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/hexagonal_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample vegetation data with hexagonal grid — hexagonal_data","text":"Krisztina Dora Konrad konrad.krisztina@ecolres.hu","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/square_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample vegetation data with square grid — square_data","title":"Sample vegetation data with square grid — square_data","text":"generated dataset containing presences absences five vegetation types.","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/square_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample vegetation data with square grid — square_data","text":"","code":"data(square_data)"},{"path":"https://ladylavender.github.io/LandComp/reference/square_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample vegetation data with square grid — square_data","text":"\"sf\" object 300 rows 6 variables","code":""},{"path":"https://ladylavender.github.io/LandComp/reference/square_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample vegetation data with square grid — square_data","text":"Krisztina Dora Konrad konrad.krisztina@ecolres.hu","code":""},{"path":"https://ladylavender.github.io/LandComp/news/index.html","id":"landcomp-001","dir":"Changelog","previous_headings":"","what":"LandComp 0.0.1","title":"LandComp 0.0.1","text":"Initial CRAN submission.","code":""}]
